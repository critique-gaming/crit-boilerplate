name: Build for Android and iOS, then upload to S3
on:
  workflow_dispatch:
  push:
    branches: [dist-mobile]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  # IOS_IDENTITY: ${{ secrets.IOS_IDENTITY }}

jobs:
  cache-lua:
    runs-on: ubuntu-latest
    steps:
    - name: Setup LuaJIT
      uses: dapetcu21/gh-actions-lua@v9.0.0
      with:
        luaVersion: 'luajit'

  build-android:
    runs-on: ubuntu-latest
    needs: cache-lua
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: 'repo'

    - name: Setup Java
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '11'

    - name: Setup Defold
      uses: dapetcu21/setup-defold@v3.0.2

    - name: Setup LuaJIT
      uses: dapetcu21/gh-actions-lua@v9.0.0
      with:
        luaVersion: 'luajit'

    - name: Install bundletool
      run: >
        curl -L 'https://github.com/google/bundletool/releases/download/1.4.0/bundletool-all-1.4.0.jar' > bundletool.jar &&
        echo "BUNDLETOOL_JAR=${PWD}/bundletool.jar" >> $GITHUB_ENV

    - name: Save Android keystore as a file
      run: > 
        echo -n "${{ secrets.ANDROID_KEYSTORE_AS_BASE64 }}" | base64 -d > android.keystore &&
        echo "ANDROID_KEYSTORE=${PWD}/android.keystore" >> $GITHUB_ENV

    - name: Build Android
      run: ./deploy.lua_ package android
      working-directory: repo

    - name: Upload builds to S3
      run: 'aws s3 sync dist/package s3://${{ secrets.S3_BUCKET_BUILDS }}/$(./deploy.lua_ props title)/$(cat dist/package/VERSION.txt)'
      working-directory: 'repo'

  build-ios:
    # runs-on: macos-latest
    runs-on: ubuntu-latest
    needs: cache-lua
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: 'repo'

    - name: Setup Java
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '11'

    - name: Setup Defold
      uses: dapetcu21/setup-defold@v3.0.2

    - name: Setup LuaJIT
      uses: dapetcu21/gh-actions-lua@v9.0.0
      with:
        luaVersion: 'luajit'

    - name: Setup LuaRocks
      uses: leafo/gh-actions-luarocks@v4.0.0

    - name: Install LuaFileSystem
      run: 'luarocks install luafilesystem'

    # - name: Import Code-signing certs
    #   uses: apple-actions/import-codesign-certs@v1
    #   with: 
    #     p12-file-base64: ${{ secrets.APPLE_CERTIFICATES_P12 }}
    #     p12-password: ${{ secrets.APPLE_CERTIFICATES_P12_PASSWORD }}

    # - name: Save iOS provisioning profile as a file
    #   run: > 
    #     echo -n "${{ secrets.IOS_PROVISIONING_AS_BASE64 }}" | base64 -d > ios_profile.mobileprovision &&
    #     echo "IOS_PROVISIONING=${PWD}/ios_profile.mobileprovision" >> $GITHUB_ENV

    - name: Build iOS
      run: ./deploy.lua_ package ios
      working-directory: repo

    - name: Upload builds to S3
      run: 'aws s3 sync dist/package s3://${{ secrets.S3_BUCKET_BUILDS }}/$(./deploy.lua_ props title)/$(cat dist/package/VERSION.txt)'
      working-directory: 'repo'
